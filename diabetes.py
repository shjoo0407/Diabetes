# -*- coding: utf-8 -*-
"""diabetes.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1x4WzFJxb4vhkjVhofZfVTkCa9134WM1A
"""

# data 경로 : /content/drive/MyDrive/diabetes/diabetes.csv

import os
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import keras
import sklearn

# Commented out IPython magic to ensure Python compatibility.
# seaborn scheme 로 세팅하고 font_scale 세팅.
plt.style.use('seaborn')
sns.set(font_scale=2.5) 

# 결측데이터를 파악하는데 직관적인 도움을 주는 패키지.
import missingno as msno

#ignore warnings
import warnings
warnings.filterwarnings('ignore')

# 브라우저에서 결과 바로 볼 수 있게 해줌.
# %matplotlib inline

df = pd.read_csv("/content/drive/MyDrive/diabetes/diabetes.csv")

df.head()

df.shape

df.columns

df.dtypes

df.describe()

"""8개의 칼럼으로 해당 환자가 diabetes인지 아닌지 분류하는 분류문제이다."""

df.isnull().sum()

"""결측치는 존재하지 않는다."""

# 먼저 결과 칼럼이 불균형 데이터인지 살펴봐야 한다.
df['Outcome'].value_counts()

"""그렇게 불균형해보이지 않는다."""

# pie 그래프 혹은 countplot을 그려본다.
f, ax = plt.subplots(1,2, figsize=(18,8))
df['Outcome'].value_counts().plot.pie(explode=[0,0.1],autopct = '%1.1f%%',ax=ax[0],shadow=True)
ax[0].set_title('Pie plot - Outcome')
ax[0].set_ylabel('')

sns.countplot('Outcome',data=df,ax=ax[1])
ax[1].set_title('Count plot - Outcome')

plt.show()

"""당뇨병 환자라고 분류되어 있는 데이터는 전체의 34.9%에 달한다.

이제 칼럼 하나하나 뜯어서 살펴보자.
"""

df.columns

"""1. Pregnancies"""

df['Pregnancies'].unique()

df['Pregnancies'].value_counts()

pd.crosstab(df['Pregnancies'],df['Outcome'],margins=True)

df['Pregnancies'].describe()

df.columns

"""2. Glucose"""

df.Glucose.value_counts()

df.Glucose.unique()

f, ax = plt.subplots(1,1,figsize=(9,5))
sns.kdeplot(df[df['Outcome']==1]['Glucose'],ax=ax)
sns.kdeplot(df[df['Outcome']==0]['Glucose'],ax=ax)
plt.legend(['Diabetes','Not diabetes'])
plt.show()

"""당뇨병 걸린 사람들이 Glucose의 평균이 좀 더 높은 것을 볼 수 있다.

3. BloodPressure
"""





"""4. SkinThickness

5. Insulin

6. BMI

7. DiabetesPedigreeFunction

8. Age
"""

